<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ormcore.dao.TblUserInfoDao">

    <resultMap id="userInfResultMap" type="TblUserInfo">
        <id property="id" column="user_id"/>
        <result property="password" column="user_password"/>
        <result property="phone" column="user_account"/>
        <result property="iccard" column="norm_driving_licence"/>
        <result property="vehicleNumber" column="norm_vehicle_number"/>
        <result property="balance" column="norm_account_balance"/>
        <result property="accountId" column="account_id"/>
        <result property="deviceid" column="norm_device_id"/>
        <result property="status" column="user_status"/>
        <result property="level" column="user_leval"/>
        <result property="invitePhone" column="norm_invitePhone"/>
    </resultMap>

    <resultMap id="findResultMap" type="java.util.HashMap" extends="userInfResultMap"></resultMap>

    <!-- 根据电桩编码获取电桩费率信息-->
    <select id="findUserInfoByPhone" parameterType="String" resultMap="userInfResultMap">
		select e.user_id,e.user_password,e.user_account,e.user_leval,e.user_status,r.norm_driving_licence,r.norm_vehicle_number,
		r.account_id,r.norm_device_id,r.norm_invitePhone
		from tbl_user e left join tbl_user_normal  r on r.user_id = e.user_id
	   where
	    e.user_account=#{account} 
	</select>

    <select id="findUserInfoById" parameterType="int" resultMap="userInfResultMap">
		select e.user_id,e.user_password,e.user_account,e.user_leval,e.user_status,r.norm_driving_licence,r.norm_vehicle_number,
		r.account_id,r.norm_device_id,r.norm_invitePhone
		from tbl_user e left join tbl_user_normal  r on r.user_id = e.user_id
	   where
	    e.user_id=#{userId}
	</select>

    <select id="findAccountId" parameterType="int" resultType="int">
        SELECT IFNULL(MIN(account_id),0) FROM
        (SELECT r.account_id
        FROM fin_account_relation r
        INNER JOIN fin_bill_account b on r.bill_account_id = b.pk_id
        INNER JOIN fin_account a ON r.account_id = a.account_id
        WHERE a.account_balance > 0
        AND instr(b.bill_account_name,'充电') > 0
        AND r.user_id=#{userId}
        ORDER BY r.priority LIMIT 1) fa
    </select>

    <select id="findBalanceById" parameterType="int" resultType="BigDecimal">
        select account_balance norm_account_balance
        from fin_account
        where
        account_id=#{accountId}
    </select>

    <select id="executeSql" parameterType="String" resultType="String">
        ${_parameter}
	</select>


    <update id="updateBalance" parameterType="TblUserInfo">
	   update fin_account set
			account_balance=#{balance}
	   where 
	   account_id=#{accountId}
	</update>

    <update id="addCost" parameterType="TblUserInfo">
	   update fin_account set account_balance = account_balance +#{balance}
        where
        account_id = #{accountId}
	</update>
    <update id="subCost" parameterType="TblUserInfo">
	  update fin_account set account_balance=account_balance-#{balance}
       where
       account_id = #{accountId}
	</update>

    <insert id="insertUser" parameterType="map" useGeneratedKeys="true" keyProperty="id">
	   insert into tbl_user (
			user_account,
			user_password,
			user_leval,
			user_status
	   )values (
			#{user_account},
	  		#{user_password},
	  		#{user_leval},
	  		#{user_status}
	   )
	</insert>

    <insert id="insertNormalUser" parameterType="map">
	   insert into tbl_user_normal (
			user_id,
			norm_origin	
	   )values (
		#{user_id},
	  	#{norm_origin}
	   )
	</insert>

</mapper> 